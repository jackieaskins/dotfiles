#--------------------------------------------------------------------#
#                              Bindings                              #
#--------------------------------------------------------------------#

# Remap prefix to 'C-a'
unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind a send-prefix # Send C-a to current window (useful for vim)

# Source tmux config with prefix + r
bind r "source ~/.config/tmux/tmux.conf \; display 'Config sourced!'"

# Use C-a C-l to clear screen
bind C-l send-keys 'C-l'

# Sane splits
bind _ split-window -v -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'
unbind '"'
unbind %

# Sesh mappings
bind L run-shell "sesh last 2> /dev/null || tmux display 'no last session'"
bind s run-shell "s"

# Open new windows with current path
bind c new-window -c '#{pane_current_path}'

#--------------------------------------------------------------------#
#                              Settings                              #
#--------------------------------------------------------------------#

# Display colors and undercurls properly
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm' # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colors

set -sg escape-time 0 # Remove delay after pressing ESC
set -g focus-events on
set -g allow-rename off
set -g detach-on-destroy off

# Start windows & panes at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

# Auto rename
set -g renumber-windows on

# Allows resizing & scrolling in panes
set -g mouse on

# Makes nested OSC52 work
set -g set-clipboard on
set -g allow-passthrough on

if "test -f ~/dotfiles/tmux/custom.conf" "source-file ~/dotfiles/tmux/custom.conf"


#--------------------------------------------------------------------#
#                            Status Line                             #
#--------------------------------------------------------------------#

set -g status "on"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

set -g status-left "  #S "

set -g @branch-format "  #(git -C #{pane_current_path} rev-parse --abbrev-ref HEAD || echo -) "
set -g @host-format " 󰍹 #h "
set -g status-right "#[#{E:@branch-style}]#{E:@branch-format}#[#{E:@host-style}]#{E:@host-format}"

set -g window-status-separator ""
set -g window-status-format " #I #W #{?#F,#F ,}"
set -g window-status-current-format " #I #W #F "
