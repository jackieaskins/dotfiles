{
  "React Function Component": {
    "prefix": "rfc",
    "body": [
      "export default function ${1:$TM_FILENAME_BASE}(): JSX.Element {",
      "  return (",
      "    ${2:<div />}",
      "  );",
      "}"
    ]
  },
  "React Function Component with Props": {
    "prefix": "rfcp",
    "body": [
      "type ${1:$TM_FILENAME_BASE}Props = {",
      "  ${2}",
      "};",
      "",
      "export default function $1(${3:props}: $1Props): JSX.Element {",
      "  return (",
      "    ${4:<div />}",
      "  );",
      "}"
    ]
  },
  "React Context Component": {
    "prefix": "rcc",
    "body": [
      "import { createContext, ReactNode, useContext } from 'react';",
      "",
      "type ${1:$TM_FILENAME_BASE}State = {",
      "  ${2}",
      "};",
      "",
      "const $1 = createContext<$1State>(${3:{}});",
      "",
      "export function ${4}Provider({ children }: { children: ReactNode }): JSX.Element {",
      "  ${5}",
      "",
      "  return <$1.Provider value={${6}}>{children}</$1.Provider>",
      "}",
      "",
      "export function use$4(): $1State {",
      "  return useContext($1);",
      "}"
    ]
  },
  "Enzyme Test Setup": {
    "prefix": "enz",
    "body": [
      "import { shallow } from 'enzyme';",
      "",
      "import ${1:${TM_FILENAME_BASE}} from './$1';",
      "",
      "describe('<$1 />', () => {",
      "  const renderComponent = (propOverrides = {}) =>",
      "    shallow(<$1 ${2}{...propOverrides} />);",
      "",
      "  it('renders ${3:properly}', () => {",
      "    expect(renderComponent()).toMatchSnapshot();",
      "  });",
      "",
      "  ${4}",
      "});"
    ]
  }
}
